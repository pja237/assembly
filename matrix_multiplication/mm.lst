     1                                  BITS 64
     2                                  
     3                                  %define ROWS  5
     4                                  %define COLS  5
     5                                  
     6                                  section .text
     7                                      global _start
     8                                  _start:
     9                                  
    10                                      ; SETUP matrices
    11 00000000 48BB-                       mov rbx, mat_a
    12 00000002 [0000000000000000] 
    13 0000000A E81F000000                  call f_rand_mat
    14                                  
    15 0000000F 48BB-                       mov rbx, mat_b
    16 00000011 [C800000000000000] 
    17 00000019 E810000000                  call f_rand_mat
    18                                  
    19 0000001E 48BB-                       mov rbx, mat_r
    20 00000020 [9001000000000000] 
    21 00000028 E810000000                  call f_zero_mat
    22                                      ; ---------- 
    23 0000002D 90                          nop
    24                                  
    25                                  
    26                                      ; FILL matrix, base addr in RBX with random numbers
    27                                  f_rand_mat:
    28 0000002E B919000000                  mov rcx, ROWS*COLS ; counter
    29                                  l_rand:
    30                                      ; rdrand rax
    31 00000033 48890B                      mov qword [rbx], rcx ; CHANGE later to use RDRAND rax
    32 00000036 4883C308                    add rbx, 8     ; next address += quad word (8 byte)
    33 0000003A E2F7                        loop l_rand
    34 0000003C C3                          ret
    35                                      ; ---------- 
    36                                  
    37                                      ; ZERO matrix, base addr in RBX 
    38                                  f_zero_mat:
    39 0000003D B919000000                  mov rcx, ROWS*COLS ; counter
    40 00000042 B800000000                  mov rax, 0
    41                                  l_zero:
    42 00000047 488903                      mov qword [rbx], rax
    43 0000004A 4883C308                    add rbx, 8     ; next address += quad word (8 byte)
    44 0000004E E2F7                        loop l_zero
    45 00000050 C3                          ret
    46                                      ; ---------- 
    47                                      
    48                                  
    49                                  section .data
    50                                  
    51                                  section .bss
    52 00000000 <res 000000C8>          mat_a: resq ROWS*COLS ; 5 x 5 x quad-word (4*2 byte == 8 byte == 64 bit) == 25 * 64 bit
    53 000000C8 <res 000000C8>          mat_b: resq ROWS*COLS ; 5 x 5 x quad-word (4*2 byte == 8 byte == 64 bit) == 25 * 64 bit
    54 00000190 <res 000000C8>          mat_r: resq ROWS*COLS ; 5 x 5 x quad-word (4*2 byte == 8 byte == 64 bit) == 25 * 64 bit
